 /**
  * "–ê–Ω–∏–º–∞—Ü–∏—è" –∫—Ä—É—á–µ–Ω–∏—è –∫–æ–ª–µ—Å–∞ —Ñ–æ—Ä—Ç—É–Ω—ã.
  * –ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É,
  * –∞ –≤ –∫–æ–Ω—Ü–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—É—é.
  * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise<–∑–∞–¥–∞—á–∞>.
  */
 

export const spinWheelAnimation = (bot, chatId, unsolvedTasks) => {
    return new Promise(async (resolve) => {
        let spinMsg = await bot.sendMessage(chatId, "üé° –ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã –∫—Ä—É—Ç–∏—Ç—Å—è...", {
            parse_mode: 'HTML'
        });
 
        let steps = 3;
 
        const interval = setInterval(async () => {
        steps--;
        if (steps <= 0) {
            clearInterval(interval);
            const finalIndex = Math.floor(Math.random() * unsolvedTasks.length);
            const chosenTask = unsolvedTasks[finalIndex];

            await bot.editMessageText(
                `üéâ –ö–æ–ª–µ—Å–æ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å!\n<b>–ó–∞–¥–∞—á–∞:</b> ${chosenTask.description}\n` +
                `<b>–ò–º—è —Ñ—É–Ω–∫—Ü–∏–∏:</b> ${chosenTask.function_name}\n\n` +
                `–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –Ω–∞ JavaScript –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–∞–ª–ª—ã!`,
            {
                chat_id: chatId,
                message_id: spinMsg.message_id,
                parse_mode: 'HTML'
            }
        );
        resolve(chosenTask);
        } else {
            const randomIndex = Math.floor(Math.random() * unsolvedTasks.length);
            const randomTask = unsolvedTasks[randomIndex];
            await bot.editMessageText(
                `üé° –ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã –∫—Ä—É—Ç–∏—Ç—Å—è...\n<b>–°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–∞—á–∞:</b> ${randomTask.description}`,
                {
                    chat_id: chatId,
                    message_id: spinMsg.message_id,
                    parse_mode: 'HTML'
                }
            );
        }
     }, 1200);
   });
 }